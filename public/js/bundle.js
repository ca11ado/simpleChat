(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

/**
 * Created by tos on 06.11.2015.
 */

var chat = require('./chat/chat');
var ws = require('./chat/websocket');

console.log('start app');

ws.connect('ws://localhost:8080');

ws.onMsg('myMsg', function (data) {
  console.log('New myMsg message', data);
});

},{"./chat/chat":2,"./chat/websocket":3}],2:[function(require,module,exports){
'use strict';

/**
 * Created by tos on 06.11.2015.
 */

module.exports = [{
  name: 't0s',
  messages: 10
}, {
  name: 'test',
  messages: 5
}];

},{}],3:[function(require,module,exports){
'use strict';

/**
 * Created by tos on 07.11.2015.
 */

var _socket = undefined,
    _events = {};
var WS_TYPE_NEW = 'new',
    WS_TYPE_MSG = "message";

function message(type, data) {
  switch (type) {
    case types.NEW:
      return { type: types.NEW, login: data.login };
      break;
    case types.MESSAGE:
      return { type: types.MESSAGE, login: data.login, msg: data.msg, time: data.time };
      break;
    default:
    //nothing
  }
}

var WS = {

  connect: function connect(url) {
    console.log('starting ws');
    if (_socket) return Error('Уже есть соединение');

    _socket = new WebSocket(url);

    _socket.onopen = function () {
      _socket.send('Hello world2');
    };
    _socket.onclose = function (event) {
      console.log('Код: ' + event.code + ' причина: ' + event.reason);
    };
    _socket.onmessage = function (event) {
      WS.emitMsg('myMsg', event.data);
      console.log("Получены данные" + event.data);
    };
    _socket.onerror = function (error) {
      console.log("Ошибка " + error.message);
    };

    return _socket;
  },

  getSocket: function getSocket() {
    return _socket;
  },

  onMsg: function onMsg(event, callback) {
    _events[event] = _events[event] ? _events[event].push(callback) : [];
  },

  emitMsg: function emitMsg(event, arg) {
    if (_events.hasOwnProperty(event)) {
      _events[event].map(function (v) {
        v(arg);
      });
    }
  }

};

module.exports = WS;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy93YXRjaGlmeS9ub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwiYXBwLmpzIiwiY2hhdC5qcyIsIndlYnNvY2tldC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQ0lBLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNsQyxJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQzs7QUFFckMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQzs7QUFFekIsRUFBRSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDOztBQUVsQyxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxVQUFVLElBQUksRUFBRTtBQUNoQyxTQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxDQUFDO0NBQ3hDLENBQUMsQ0FBQzs7Ozs7Ozs7O0FDVEgsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUNmO0FBQ0UsTUFBSSxFQUFFLEtBQUs7QUFDWCxVQUFRLEVBQUUsRUFBRTtDQUNiLEVBQ0Q7QUFDRSxNQUFJLEVBQUUsTUFBTTtBQUNaLFVBQVEsRUFBRSxDQUFDO0NBQ1osQ0FDRixDQUFDOzs7Ozs7Ozs7QUNURixJQUFJLE9BQU8sWUFBQTtJQUNQLE9BQU8sR0FBRyxFQUFFLENBQUM7QUFDakIsSUFBTSxXQUFXLEdBQUcsS0FBSztJQUNuQixXQUFXLEdBQUcsU0FBUyxDQUFDOztBQUU5QixTQUFTLE9BQU8sQ0FBQyxJQUFJLEVBQUMsSUFBSSxFQUFFO0FBQzFCLFVBQVEsSUFBSTtBQUNWLFNBQUssS0FBSyxDQUFDLEdBQUc7QUFDWixhQUFPLEVBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUMsQ0FBQztBQUM1QyxZQUFNO0FBQUEsQUFDUixTQUFLLEtBQUssQ0FBQyxPQUFPO0FBQ2hCLGFBQU8sRUFBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBQyxDQUFDO0FBQy9FLFlBQU07QUFBQSxBQUNSOztBQUFTLEdBRVY7Q0FDRjs7QUFFRCxJQUFJLEVBQUUsR0FBRzs7QUFFUCxTQUFPLEVBQUUsaUJBQVMsR0FBRyxFQUFFO0FBQ3JCLFdBQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDM0IsUUFBSSxPQUFPLEVBQUUsT0FBTyxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQzs7QUFFakQsV0FBTyxHQUFHLElBQUksU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDOztBQUU3QixXQUFPLENBQUMsTUFBTSxHQUFHLFlBQVc7QUFDMUIsYUFBTyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztLQUM5QixDQUFDO0FBQ0YsV0FBTyxDQUFDLE9BQU8sR0FBRyxVQUFTLEtBQUssRUFBRTtBQUFFLGFBQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxJQUFJLEdBQUcsWUFBWSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUFFLENBQUM7QUFDdkcsV0FBTyxDQUFDLFNBQVMsR0FBRyxVQUFTLEtBQUssRUFBRTtBQUNsQyxRQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDaEMsYUFBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDN0MsQ0FBQztBQUNGLFdBQU8sQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUU7QUFBRSxhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7S0FBRSxDQUFDOztBQUU5RSxXQUFPLE9BQU8sQ0FBQztHQUNoQjs7QUFFRCxXQUFTLEVBQUUscUJBQVc7QUFDcEIsV0FBTyxPQUFPLENBQUM7R0FDaEI7O0FBRUQsT0FBSyxFQUFFLGVBQVMsS0FBSyxFQUFFLFFBQVEsRUFBRTtBQUMvQixXQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO0dBQ3RFOztBQUVELFNBQU8sRUFBRSxpQkFBUyxLQUFLLEVBQUUsR0FBRyxFQUFFO0FBQzVCLFFBQUksT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUNqQyxhQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQzVCLFNBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUNSLENBQUMsQ0FBQztLQUNKO0dBQ0Y7O0NBRUYsQ0FBQzs7QUFFRixNQUFNLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvKipcclxuICogQ3JlYXRlZCBieSB0b3Mgb24gMDYuMTEuMjAxNS5cclxuICovXHJcblxyXG5sZXQgY2hhdCA9IHJlcXVpcmUoJy4vY2hhdC9jaGF0Jyk7XHJcbmxldCB3cyA9IHJlcXVpcmUoJy4vY2hhdC93ZWJzb2NrZXQnKTtcclxuXHJcbmNvbnNvbGUubG9nKCdzdGFydCBhcHAnKTtcclxuXHJcbndzLmNvbm5lY3QoJ3dzOi8vbG9jYWxob3N0OjgwODAnKTtcclxuXHJcbndzLm9uTXNnKCdteU1zZycsIGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgY29uc29sZS5sb2coJ05ldyBteU1zZyBtZXNzYWdlJywgZGF0YSk7XHJcbn0pOyIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHRvcyBvbiAwNi4xMS4yMDE1LlxyXG4gKi9cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6ICd0MHMnLFxyXG4gICAgbWVzc2FnZXM6IDEwXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiAndGVzdCcsXHJcbiAgICBtZXNzYWdlczogNVxyXG4gIH1cclxuXTsiLCIvKipcclxuICogQ3JlYXRlZCBieSB0b3Mgb24gMDcuMTEuMjAxNS5cclxuICovXHJcblxyXG5sZXQgX3NvY2tldCxcclxuICAgIF9ldmVudHMgPSB7fTtcclxuY29uc3QgV1NfVFlQRV9ORVcgPSAnbmV3JyxcclxuICAgICAgV1NfVFlQRV9NU0cgPSBcIm1lc3NhZ2VcIjtcclxuXHJcbmZ1bmN0aW9uIG1lc3NhZ2UodHlwZSxkYXRhKSB7XHJcbiAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICBjYXNlIHR5cGVzLk5FVzpcclxuICAgICAgcmV0dXJuIHt0eXBlOiB0eXBlcy5ORVcsIGxvZ2luOiBkYXRhLmxvZ2lufTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIHR5cGVzLk1FU1NBR0U6XHJcbiAgICAgIHJldHVybiB7dHlwZTogdHlwZXMuTUVTU0FHRSwgbG9naW46ZGF0YS5sb2dpbiwgbXNnOiBkYXRhLm1zZywgdGltZTogZGF0YS50aW1lfTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBkZWZhdWx0IDpcclxuICAgICAgLy9ub3RoaW5nXHJcbiAgfVxyXG59XHJcblxyXG5sZXQgV1MgPSB7XHJcblxyXG4gIGNvbm5lY3Q6IGZ1bmN0aW9uKHVybCkge1xyXG4gICAgY29uc29sZS5sb2coJ3N0YXJ0aW5nIHdzJyk7XHJcbiAgICBpZiAoX3NvY2tldCkgcmV0dXJuIEVycm9yKCfQo9C20LUg0LXRgdGC0Ywg0YHQvtC10LTQuNC90LXQvdC40LUnKTtcclxuXHJcbiAgICBfc29ja2V0ID0gbmV3IFdlYlNvY2tldCh1cmwpO1xyXG5cclxuICAgIF9zb2NrZXQub25vcGVuID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIF9zb2NrZXQuc2VuZCgnSGVsbG8gd29ybGQyJyk7XHJcbiAgICB9O1xyXG4gICAgX3NvY2tldC5vbmNsb3NlID0gZnVuY3Rpb24oZXZlbnQpIHsgY29uc29sZS5sb2coJ9Ca0L7QtDogJyArIGV2ZW50LmNvZGUgKyAnINC/0YDQuNGH0LjQvdCwOiAnICsgZXZlbnQucmVhc29uKTsgfTtcclxuICAgIF9zb2NrZXQub25tZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgV1MuZW1pdE1zZygnbXlNc2cnLCBldmVudC5kYXRhKTtcclxuICAgICAgY29uc29sZS5sb2coXCLQn9C+0LvRg9GH0LXQvdGLINC00LDQvdC90YvQtVwiICsgZXZlbnQuZGF0YSk7XHJcbiAgICB9O1xyXG4gICAgX3NvY2tldC5vbmVycm9yID0gZnVuY3Rpb24oZXJyb3IpIHsgY29uc29sZS5sb2coXCLQntGI0LjQsdC60LAgXCIgKyBlcnJvci5tZXNzYWdlKTsgfTtcclxuXHJcbiAgICByZXR1cm4gX3NvY2tldDtcclxuICB9LFxyXG5cclxuICBnZXRTb2NrZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgcmV0dXJuIF9zb2NrZXQ7XHJcbiAgfSxcclxuXHJcbiAgb25Nc2c6IGZ1bmN0aW9uKGV2ZW50LCBjYWxsYmFjaykge1xyXG4gICAgX2V2ZW50c1tldmVudF0gPSBfZXZlbnRzW2V2ZW50XSA/IF9ldmVudHNbZXZlbnRdLnB1c2goY2FsbGJhY2spIDogW107XHJcbiAgfSxcclxuXHJcbiAgZW1pdE1zZzogZnVuY3Rpb24oZXZlbnQsIGFyZykge1xyXG4gICAgaWYgKF9ldmVudHMuaGFzT3duUHJvcGVydHkoZXZlbnQpKSB7XHJcbiAgICAgIF9ldmVudHNbZXZlbnRdLm1hcChmdW5jdGlvbih2KXtcclxuICAgICAgICB2KGFyZyk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFdTOyJdfQ==
